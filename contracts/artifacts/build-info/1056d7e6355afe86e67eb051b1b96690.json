{
	"id": "1056d7e6355afe86e67eb051b1b96690",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract SimpleToken {\r\n    //wallet balance\r\n    mapping(address => uint) balanceOf;\r\n\r\n    //initial supply\r\n    constructor(uint initialSupply) public {\r\n        balanceOf[msg.sender] = initialSupply;\r\n    }\r\n\r\n    //transfer\r\n    function transfer(address to, uint amount) public {\r\n        require(balanceOf[msg.sender] >= amount);\r\n        require(balanceOf[msg.sender] + amount > balanceOf[msg.sender]);\r\n\r\n        balanceOf[msg.sender] -= amount;\r\n        balanceOf[to] += amount;\r\n    }\r\n    function balance() public view returns(uint) {\r\n        return balanceOf[msg.sender];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleToken.sol": {
				"SimpleToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleToken.sol\":74:670  contract SimpleToken {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleToken.sol\":189:284  constructor(uint initialSupply) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleToken.sol\":263:276  initialSupply */\n  dup1\n    /* \"contracts/SimpleToken.sol\":239:248  balanceOf */\n  0x00\n    /* \"contracts/SimpleToken.sol\":239:260  balanceOf[msg.sender] */\n  dup1\n    /* \"contracts/SimpleToken.sol\":249:259  msg.sender */\n  caller\n    /* \"contracts/SimpleToken.sol\":239:260  balanceOf[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/SimpleToken.sol\":239:276  balanceOf[msg.sender] = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":189:284  constructor(uint initialSupply) public {\r... */\n  pop\n    /* \"contracts/SimpleToken.sol\":74:670  contract SimpleToken {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"contracts/SimpleToken.sol\":74:670  contract SimpleToken {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleToken.sol\":74:670  contract SimpleToken {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9059cbb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleToken.sol\":308:569  function transfer(address to, uint amount) public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/SimpleToken.sol\":575:667  function balance() public view returns(uint) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":308:569  function transfer(address to, uint amount) public {\r... */\n    tag_8:\n        /* \"contracts/SimpleToken.sol\":402:408  amount */\n      dup1\n        /* \"contracts/SimpleToken.sol\":377:386  balanceOf */\n      0x00\n        /* \"contracts/SimpleToken.sol\":377:398  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/SimpleToken.sol\":387:397  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":377:398  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":377:408  balanceOf[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":369:409  require(balanceOf[msg.sender] >= amount) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"contracts/SimpleToken.sol\":461:470  balanceOf */\n      0x00\n        /* \"contracts/SimpleToken.sol\":461:482  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/SimpleToken.sol\":471:481  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":461:482  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":452:458  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":428:437  balanceOf */\n      0x00\n        /* \"contracts/SimpleToken.sol\":428:449  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/SimpleToken.sol\":438:448  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":428:449  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":428:458  balanceOf[msg.sender] + amount */\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/SimpleToken.sol\":428:482  balanceOf[msg.sender] + amount > balanceOf[msg.sender] */\n      gt\n        /* \"contracts/SimpleToken.sol\":420:483  require(balanceOf[msg.sender] + amount > balanceOf[msg.sender]) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"contracts/SimpleToken.sol\":521:527  amount */\n      dup1\n        /* \"contracts/SimpleToken.sol\":496:505  balanceOf */\n      0x00\n        /* \"contracts/SimpleToken.sol\":496:517  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/SimpleToken.sol\":506:516  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":496:517  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":496:527  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":555:561  amount */\n      dup1\n        /* \"contracts/SimpleToken.sol\":538:547  balanceOf */\n      0x00\n        /* \"contracts/SimpleToken.sol\":538:551  balanceOf[to] */\n      dup1\n        /* \"contracts/SimpleToken.sol\":548:550  to */\n      dup5\n        /* \"contracts/SimpleToken.sol\":538:551  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":538:561  balanceOf[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":308:569  function transfer(address to, uint amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":575:667  function balance() public view returns(uint) {\r... */\n    tag_10:\n        /* \"contracts/SimpleToken.sol\":614:618  uint */\n      0x00\n        /* \"contracts/SimpleToken.sol\":638:647  balanceOf */\n      dup1\n        /* \"contracts/SimpleToken.sol\":638:659  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":648:658  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":638:659  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":631:659  return balanceOf[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":575:667  function balance() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_23:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_25\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_27:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_29\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:771   */\n    tag_7:\n        /* \"#utility.yul\":365:371   */\n      0x00\n        /* \"#utility.yul\":373:379   */\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:509   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":428:507   */\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":390:509   */\n    tag_32:\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":573:626   */\n      tag_35\n        /* \"#utility.yul\":618:625   */\n      dup6\n        /* \"#utility.yul\":609:615   */\n      dup3\n        /* \"#utility.yul\":598:607   */\n      dup7\n        /* \"#utility.yul\":594:616   */\n      add\n        /* \"#utility.yul\":573:626   */\n      tag_23\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":563:626   */\n      swap3\n      pop\n        /* \"#utility.yul\":519:636   */\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":701:754   */\n      tag_36\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup7\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_27\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:764   */\n      pop\n        /* \"#utility.yul\":297:771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:895   */\n    tag_37:\n        /* \"#utility.yul\":864:888   */\n      tag_39\n        /* \"#utility.yul\":882:887   */\n      dup2\n        /* \"#utility.yul\":864:888   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":859:862   */\n      dup3\n        /* \"#utility.yul\":852:889   */\n      mstore\n        /* \"#utility.yul\":777:895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:1123   */\n    tag_12:\n        /* \"#utility.yul\":994:998   */\n      0x00\n        /* \"#utility.yul\":1032:1034   */\n      0x20\n        /* \"#utility.yul\":1021:1030   */\n      dup3\n        /* \"#utility.yul\":1017:1035   */\n      add\n        /* \"#utility.yul\":1009:1035   */\n      swap1\n      pop\n        /* \"#utility.yul\":1045:1116   */\n      tag_42\n        /* \"#utility.yul\":1113:1114   */\n      0x00\n        /* \"#utility.yul\":1102:1111   */\n      dup4\n        /* \"#utility.yul\":1098:1115   */\n      add\n        /* \"#utility.yul\":1089:1095   */\n      dup5\n        /* \"#utility.yul\":1045:1116   */\n      tag_37\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":901:1123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1210:1515   */\n    tag_16:\n        /* \"#utility.yul\":1250:1253   */\n      0x00\n        /* \"#utility.yul\":1269:1289   */\n      tag_46\n        /* \"#utility.yul\":1287:1288   */\n      dup3\n        /* \"#utility.yul\":1269:1289   */\n      tag_40\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1264:1289   */\n      swap2\n      pop\n        /* \"#utility.yul\":1303:1323   */\n      tag_47\n        /* \"#utility.yul\":1321:1322   */\n      dup4\n        /* \"#utility.yul\":1303:1323   */\n      tag_40\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1298:1323   */\n      swap3\n      pop\n        /* \"#utility.yul\":1457:1458   */\n      dup3\n        /* \"#utility.yul\":1389:1455   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1385:1459   */\n      sub\n        /* \"#utility.yul\":1382:1383   */\n      dup3\n        /* \"#utility.yul\":1379:1460   */\n      gt\n        /* \"#utility.yul\":1376:1483   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1463:1481   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1376:1483   */\n    tag_48:\n        /* \"#utility.yul\":1507:1508   */\n      dup3\n        /* \"#utility.yul\":1504:1505   */\n      dup3\n        /* \"#utility.yul\":1500:1509   */\n      add\n        /* \"#utility.yul\":1493:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1210:1515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1712   */\n    tag_19:\n        /* \"#utility.yul\":1561:1565   */\n      0x00\n        /* \"#utility.yul\":1581:1601   */\n      tag_52\n        /* \"#utility.yul\":1599:1600   */\n      dup3\n        /* \"#utility.yul\":1581:1601   */\n      tag_40\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1576:1601   */\n      swap2\n      pop\n        /* \"#utility.yul\":1615:1635   */\n      tag_53\n        /* \"#utility.yul\":1633:1634   */\n      dup4\n        /* \"#utility.yul\":1615:1635   */\n      tag_40\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1610:1635   */\n      swap3\n      pop\n        /* \"#utility.yul\":1654:1655   */\n      dup3\n        /* \"#utility.yul\":1651:1652   */\n      dup3\n        /* \"#utility.yul\":1648:1656   */\n      lt\n        /* \"#utility.yul\":1645:1679   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1659:1677   */\n      tag_55\n      tag_50\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1645:1679   */\n    tag_54:\n        /* \"#utility.yul\":1704:1705   */\n      dup3\n        /* \"#utility.yul\":1701:1702   */\n      dup3\n        /* \"#utility.yul\":1697:1706   */\n      sub\n        /* \"#utility.yul\":1689:1706   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:1814   */\n    tag_56:\n        /* \"#utility.yul\":1755:1762   */\n      0x00\n        /* \"#utility.yul\":1784:1808   */\n      tag_58\n        /* \"#utility.yul\":1802:1807   */\n      dup3\n        /* \"#utility.yul\":1784:1808   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1773:1808   */\n      swap1\n      pop\n        /* \"#utility.yul\":1718:1814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:1946   */\n    tag_59:\n        /* \"#utility.yul\":1857:1864   */\n      0x00\n        /* \"#utility.yul\":1897:1939   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1890:1895   */\n      dup3\n        /* \"#utility.yul\":1886:1940   */\n      and\n        /* \"#utility.yul\":1875:1940   */\n      swap1\n      pop\n        /* \"#utility.yul\":1820:1946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1952:2029   */\n    tag_40:\n        /* \"#utility.yul\":1989:1996   */\n      0x00\n        /* \"#utility.yul\":2018:2023   */\n      dup2\n        /* \"#utility.yul\":2007:2023   */\n      swap1\n      pop\n        /* \"#utility.yul\":1952:2029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2035:2215   */\n    tag_50:\n        /* \"#utility.yul\":2083:2160   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2080:2081   */\n      0x00\n        /* \"#utility.yul\":2073:2161   */\n      mstore\n        /* \"#utility.yul\":2180:2184   */\n      0x11\n        /* \"#utility.yul\":2177:2178   */\n      0x04\n        /* \"#utility.yul\":2170:2185   */\n      mstore\n        /* \"#utility.yul\":2204:2208   */\n      0x24\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2194:2209   */\n      revert\n        /* \"#utility.yul\":2344:2461   */\n    tag_34:\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2450:2451   */\n      dup1\n        /* \"#utility.yul\":2443:2455   */\n      revert\n        /* \"#utility.yul\":2467:2589   */\n    tag_26:\n        /* \"#utility.yul\":2540:2564   */\n      tag_67\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2540:2564   */\n      tag_56\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2533:2538   */\n      dup2\n        /* \"#utility.yul\":2530:2565   */\n      eq\n        /* \"#utility.yul\":2520:2583   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":2579:2580   */\n      0x00\n        /* \"#utility.yul\":2576:2577   */\n      dup1\n        /* \"#utility.yul\":2569:2581   */\n      revert\n        /* \"#utility.yul\":2520:2583   */\n    tag_68:\n        /* \"#utility.yul\":2467:2589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2595:2717   */\n    tag_30:\n        /* \"#utility.yul\":2668:2692   */\n      tag_70\n        /* \"#utility.yul\":2686:2691   */\n      dup2\n        /* \"#utility.yul\":2668:2692   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2661:2666   */\n      dup2\n        /* \"#utility.yul\":2658:2693   */\n      eq\n        /* \"#utility.yul\":2648:2711   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2707:2708   */\n      0x00\n        /* \"#utility.yul\":2704:2705   */\n      dup1\n        /* \"#utility.yul\":2697:2709   */\n      revert\n        /* \"#utility.yul\":2648:2711   */\n    tag_71:\n        /* \"#utility.yul\":2595:2717   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3aee95338580ddf6e2db2734a978d30a814c88d2e3843c08921c1c56489aeb464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:1"
															},
															"nodeType": "YulIf",
															"src": "976:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:1",
														"type": ""
													}
												],
												"src": "923:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161052b38038061052b83398181016040528101906100329190610090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506100e3565b60008151905061008a816100cc565b92915050565b6000602082840312156100a6576100a56100c7565b5b60006100b48482850161007b565b91505092915050565b6000819050919050565b600080fd5b6100d5816100bd565b81146100e057600080fd5b50565b610439806100f26000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a9059cbb1461003b578063b69ef8a814610057575b600080fd5b61005560048036038101906100509190610271565b610075565b005b61005f610201565b60405161006c91906102c0565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156100c057600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461014991906102db565b1161015357600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a19190610331565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f691906102db565b925050819055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600081359050610256816103d5565b92915050565b60008135905061026b816103ec565b92915050565b60008060408385031215610288576102876103d0565b5b600061029685828601610247565b92505060206102a78582860161025c565b9150509250929050565b6102ba81610397565b82525050565b60006020820190506102d560008301846102b1565b92915050565b60006102e682610397565b91506102f183610397565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610326576103256103a1565b5b828201905092915050565b600061033c82610397565b915061034783610397565b92508282101561035a576103596103a1565b5b828203905092915050565b600061037082610377565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103de81610365565b81146103e957600080fd5b50565b6103f581610397565b811461040057600080fd5b5056fea2646970667358221220b3aee95338580ddf6e2db2734a978d30a814c88d2e3843c08921c1c56489aeb464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x52B CODESIZE SUB DUP1 PUSH2 0x52B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8A DUP2 PUSH2 0xCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6 JUMPI PUSH2 0xA5 PUSH2 0xC7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB4 DUP5 DUP3 DUP6 ADD PUSH2 0x7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0xBD JUMP JUMPDEST DUP2 EQ PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x439 DUP1 PUSH2 0xF2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST GT PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x3D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296 DUP6 DUP3 DUP7 ADD PUSH2 0x247 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A7 DUP6 DUP3 DUP7 ADD PUSH2 0x25C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x397 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1 DUP4 PUSH2 0x397 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP2 POP PUSH2 0x347 DUP4 PUSH2 0x397 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DE DUP2 PUSH2 0x365 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x397 JUMP JUMPDEST DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAE 0xE9 MSTORE8 CODESIZE PC 0xD 0xDF PUSH15 0x2DB2734A978D30A814C88D2E3843C0 DUP10 0x21 0xC1 0xC5 PUSH5 0x89AEB46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "74:596:0:-:0;;;189:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;263:13;239:9;:21;249:10;239:21;;;;;;;;;;;;;;;:37;;;;189:95;74:596;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;74:596:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance_73": {
									"entryPoint": 513,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_62": {
									"entryPoint": 117,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2720:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:1",
														"type": ""
													}
												],
												"src": "152:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "428:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:1"
															},
															"nodeType": "YulIf",
															"src": "390:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "519:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "534:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "538:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "563:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "598:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "609:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "594:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "594:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "573:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "573:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "563:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "646:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "661:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "675:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "665:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:1",
														"type": ""
													}
												],
												"src": "297:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "842:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "859:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "882:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "864:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "864:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "830:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "837:3:1",
														"type": ""
													}
												],
												"src": "777:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1089:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1102:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1113:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1045:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1045:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1045:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "971:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "983:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "994:4:1",
														"type": ""
													}
												],
												"src": "901:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1169:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1179:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1195:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1162:6:1",
														"type": ""
													}
												],
												"src": "1129:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1254:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1264:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1287:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1269:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1264:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1321:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1303:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1298:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1461:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1463:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1463:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1382:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1389:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1457:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1379:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:81:1"
															},
															"nodeType": "YulIf",
															"src": "1376:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1493:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1504:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1507:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1241:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1244:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1250:3:1",
														"type": ""
													}
												],
												"src": "1210:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1599:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1581:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1576:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1610:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1633:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1615:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1610:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1657:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1659:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1659:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1659:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1651:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1654:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1648:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:8:1"
															},
															"nodeType": "YulIf",
															"src": "1645:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1689:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1701:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1704:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1697:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1689:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1552:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1555:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1561:4:1",
														"type": ""
													}
												],
												"src": "1521:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1763:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1773:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1802:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1784:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1773:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1745:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1755:7:1",
														"type": ""
													}
												],
												"src": "1718:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1865:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1875:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1890:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1897:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1875:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1847:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1857:7:1",
														"type": ""
													}
												],
												"src": "1820:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1997:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2007:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2018:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2007:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1979:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1989:7:1",
														"type": ""
													}
												],
												"src": "1952:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2063:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2083:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2073:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2177:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2170:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2204:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2194:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2035:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2310:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2221:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2443:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2344:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2510:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2567:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2576:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2569:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2533:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2558:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2540:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2540:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2530:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:43:1"
															},
															"nodeType": "YulIf",
															"src": "2520:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2503:5:1",
														"type": ""
													}
												],
												"src": "2467:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2638:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2661:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2686:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2668:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2668:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2658:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:43:1"
															},
															"nodeType": "YulIf",
															"src": "2648:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2631:5:1",
														"type": ""
													}
												],
												"src": "2595:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a9059cbb1461003b578063b69ef8a814610057575b600080fd5b61005560048036038101906100509190610271565b610075565b005b61005f610201565b60405161006c91906102c0565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156100c057600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461014991906102db565b1161015357600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a19190610331565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f691906102db565b925050819055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600081359050610256816103d5565b92915050565b60008135905061026b816103ec565b92915050565b60008060408385031215610288576102876103d0565b5b600061029685828601610247565b92505060206102a78582860161025c565b9150509250929050565b6102ba81610397565b82525050565b60006020820190506102d560008301846102b1565b92915050565b60006102e682610397565b91506102f183610397565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610326576103256103a1565b5b828201905092915050565b600061033c82610397565b915061034783610397565b92508282101561035a576103596103a1565b5b828203905092915050565b600061037082610377565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6103de81610365565b81146103e957600080fd5b50565b6103f581610397565b811461040057600080fd5b5056fea2646970667358221220b3aee95338580ddf6e2db2734a978d30a814c88d2e3843c08921c1c56489aeb464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST GT PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256 DUP2 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x3D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296 DUP6 DUP3 DUP7 ADD PUSH2 0x247 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A7 DUP6 DUP3 DUP7 ADD PUSH2 0x25C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x397 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1 DUP4 PUSH2 0x397 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP2 POP PUSH2 0x347 DUP4 PUSH2 0x397 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x35A JUMPI PUSH2 0x359 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3DE DUP2 PUSH2 0x365 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x397 JUMP JUMPDEST DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xAE 0xE9 MSTORE8 CODESIZE PC 0xD 0xDF PUSH15 0x2DB2734A978D30A814C88D2E3843C0 DUP10 0x21 0xC1 0xC5 PUSH5 0x89AEB46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "74:596:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;575:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:261;402:6;377:9;:21;387:10;377:21;;;;;;;;;;;;;;;;:31;;369:40;;;;;;461:9;:21;471:10;461:21;;;;;;;;;;;;;;;;452:6;428:9;:21;438:10;428:21;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;:54;420:63;;;;;;521:6;496:9;:21;506:10;496:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;555:6;538:9;:13;548:2;538:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;308:261;;:::o;575:92::-;614:4;638:9;:21;648:10;638:21;;;;;;;;;;;;;;;;631:28;;575:92;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:118::-;864:24;882:5;864:24;:::i;:::-;859:3;852:37;777:118;;:::o;901:222::-;994:4;1032:2;1021:9;1017:18;1009:26;;1045:71;1113:1;1102:9;1098:17;1089:6;1045:71;:::i;:::-;901:222;;;;:::o;1210:305::-;1250:3;1269:20;1287:1;1269:20;:::i;:::-;1264:25;;1303:20;1321:1;1303:20;:::i;:::-;1298:25;;1457:1;1389:66;1385:74;1382:1;1379:81;1376:107;;;1463:18;;:::i;:::-;1376:107;1507:1;1504;1500:9;1493:16;;1210:305;;;;:::o;1521:191::-;1561:4;1581:20;1599:1;1581:20;:::i;:::-;1576:25;;1615:20;1633:1;1615:20;:::i;:::-;1610:25;;1654:1;1651;1648:8;1645:34;;;1659:18;;:::i;:::-;1645:34;1704:1;1701;1697:9;1689:17;;1521:191;;;;:::o;1718:96::-;1755:7;1784:24;1802:5;1784:24;:::i;:::-;1773:35;;1718:96;;;:::o;1820:126::-;1857:7;1897:42;1890:5;1886:54;1875:65;;1820:126;;;:::o;1952:77::-;1989:7;2018:5;2007:16;;1952:77;;;:::o;2035:180::-;2083:77;2080:1;2073:88;2180:4;2177:1;2170:15;2204:4;2201:1;2194:15;2344:117;2453:1;2450;2443:12;2467:122;2540:24;2558:5;2540:24;:::i;:::-;2533:5;2530:35;2520:63;;2579:1;2576;2569:12;2520:63;2467:122;:::o;2595:::-;2668:24;2686:5;2668:24;:::i;:::-;2661:5;2658:35;2648:63;;2707:1;2704;2697:12;2648:63;2595:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "216200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance()": "2526",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 189,
									"end": 284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 263,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 239,
									"end": 248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 249,
									"end": 259,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 239,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 260,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 239,
									"end": 276,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 239,
									"end": 276,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 239,
									"end": 276,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 239,
									"end": 276,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 189,
									"end": 284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 670,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3aee95338580ddf6e2db2734a978d30a814c88d2e3843c08921c1c56489aeb464736f6c63430008070033",
									".code": [
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 397,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 377,
											"end": 398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 408,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 369,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 369,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 369,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 369,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 369,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 481,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 461,
											"end": 482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 448,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 482,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 420,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 420,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 516,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 496,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 658,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 638,
											"end": 659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 667,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 390,
											"end": 509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 390,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 594,
											"end": 616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 563,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 519,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 646,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 777,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 864,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 882,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 864,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 864,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 852,
											"end": 889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 777,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 895,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 994,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1269,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1459,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1460,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1376,
											"end": 1483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1483,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1376,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1581,
											"end": 1601,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1581,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1615,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1656,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1659,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1712,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1784,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2035,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2035,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2160,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2209,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2589,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2467,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2520,
											"end": 2583,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2583,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2520,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2595,
											"end": 2717,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2595,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2648,
											"end": 2711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2711,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2648,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleToken.sol\":{\"keccak256\":\"0x4f4df0bd6f8b6072b397630a9098ddda315daae7613278a12e269182b47a1bdc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://28134f9d3e775c2dbe19829a00b9650b99d241cb86afba68fb663506ac6d917c\",\"dweb:/ipfs/QmZcwpUZFF73645XDR35oWEnNtbBnUfwmwUci59P3vLBYA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/SimpleToken.sol:SimpleToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/SimpleToken.sol:10:5:\n   |\n10 |     constructor(uint initialSupply) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 284,
					"file": "contracts/SimpleToken.sol",
					"start": 189
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SimpleToken.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleToken.sol",
					"exportedSymbols": {
						"SimpleToken": [
							74
						]
					},
					"id": 75,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 74,
							"linearizedBaseContracts": [
								74
							],
							"name": "SimpleToken",
							"nameLocation": "83:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "149:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "124:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "132:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "124:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "143:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "228:56:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 10,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 13,
														"indexExpression": {
															"expression": {
																"id": 11,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "249:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "249:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "239:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "263:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "239:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "239:37:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "206:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "201:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "201:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:0:0"
									},
									"scope": 74,
									"src": "189:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "358:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 26,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "377:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 29,
																"indexExpression": {
																	"expression": {
																		"id": 27,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "387:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "387:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "377:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "377:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "369:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "369:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 35,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "428:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 38,
																	"indexExpression": {
																		"expression": {
																			"id": 36,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "438:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "438:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "428:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 39,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "452:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "428:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"id": 41,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "461:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 44,
																"indexExpression": {
																	"expression": {
																		"id": 42,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "471:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "471:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "461:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "428:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "420:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "420:63:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 48,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "496:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 51,
														"indexExpression": {
															"expression": {
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "506:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "506:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "496:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 52,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "521:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "496:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "496:31:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 55,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "538:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 57,
														"indexExpression": {
															"id": 56,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "548:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "538:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 58,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "538:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "538:23:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "343:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "338:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:25:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:0"
									},
									"scope": 74,
									"src": "308:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "620:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 67,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "638:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 70,
													"indexExpression": {
														"expression": {
															"id": 68,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "648:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "648:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "638:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 71,
												"nodeType": "Return",
												"src": "631:28:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "584:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:6:0"
									},
									"scope": 74,
									"src": "575:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 75,
							"src": "74:596:0",
							"usedErrors": []
						}
					],
					"src": "39:631:0"
				},
				"id": 0
			}
		}
	}
}