{
	"id": "f7ef9bd96fc65d3621aae78dfe9c76e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PrevInvoker.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract LastInvoker {\r\n    address lastInvoker;\r\n\r\n    function getLastInvoker() public returns(bool, address){\r\n       address prevInvoker = lastInvoker;\r\n       lastInvoker = msg.sender;\r\n       \r\n        return (prevInvoker != address(0x0), prevInvoker);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/PrevInvoker.sol": {
				"LastInvoker": {
					"abi": [
						{
							"inputs": [],
							"name": "getLastInvoker",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PrevInvoker.sol\":74:342  contract LastInvoker {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PrevInvoker.sol\":74:342  contract LastInvoker {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01e7a2ce\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PrevInvoker.sol\":130:339  function getLastInvoker() public returns(bool, address){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap3\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/PrevInvoker.sol\":171:175  bool */\n      0x00\n        /* \"contracts/PrevInvoker.sol\":177:184  address */\n      dup1\n        /* \"contracts/PrevInvoker.sol\":195:214  address prevInvoker */\n      0x00\n        /* \"contracts/PrevInvoker.sol\":217:228  lastInvoker */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PrevInvoker.sol\":195:228  address prevInvoker = lastInvoker */\n      swap1\n      pop\n        /* \"contracts/PrevInvoker.sol\":252:262  msg.sender */\n      caller\n        /* \"contracts/PrevInvoker.sol\":238:249  lastInvoker */\n      0x00\n      dup1\n        /* \"contracts/PrevInvoker.sol\":238:262  lastInvoker = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PrevInvoker.sol\":313:316  0x0 */\n      0x00\n        /* \"contracts/PrevInvoker.sol\":290:317  prevInvoker != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PrevInvoker.sol\":290:301  prevInvoker */\n      dup2\n        /* \"contracts/PrevInvoker.sol\":290:317  prevInvoker != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PrevInvoker.sol\":319:330  prevInvoker */\n      dup2\n        /* \"contracts/PrevInvoker.sol\":282:331  return (prevInvoker != address(0x0), prevInvoker) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/PrevInvoker.sol\":130:339  function getLastInvoker() public returns(bool, address){\r... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_10:\n        /* \"#utility.yul\":94:118   */\n      tag_12\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:240   */\n    tag_14:\n        /* \"#utility.yul\":212:233   */\n      tag_16\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":212:233   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":207:210   */\n      dup3\n        /* \"#utility.yul\":200:234   */\n      mstore\n        /* \"#utility.yul\":131:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:566   */\n    tag_7:\n        /* \"#utility.yul\":361:365   */\n      0x00\n        /* \"#utility.yul\":399:401   */\n      0x40\n        /* \"#utility.yul\":388:397   */\n      dup3\n        /* \"#utility.yul\":384:402   */\n      add\n        /* \"#utility.yul\":376:402   */\n      swap1\n      pop\n        /* \"#utility.yul\":412:477   */\n      tag_19\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":463:472   */\n      dup4\n        /* \"#utility.yul\":459:476   */\n      add\n        /* \"#utility.yul\":450:456   */\n      dup6\n        /* \"#utility.yul\":412:477   */\n      tag_14\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":487:559   */\n      tag_20\n        /* \"#utility.yul\":555:557   */\n      0x20\n        /* \"#utility.yul\":544:553   */\n      dup4\n        /* \"#utility.yul\":540:558   */\n      add\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":487:559   */\n      tag_10\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":246:566   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:668   */\n    tag_13:\n        /* \"#utility.yul\":609:616   */\n      0x00\n        /* \"#utility.yul\":638:662   */\n      tag_22\n        /* \"#utility.yul\":656:661   */\n      dup3\n        /* \"#utility.yul\":638:662   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":627:662   */\n      swap1\n      pop\n        /* \"#utility.yul\":572:668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:764   */\n    tag_17:\n        /* \"#utility.yul\":708:715   */\n      0x00\n        /* \"#utility.yul\":751:756   */\n      dup2\n        /* \"#utility.yul\":744:757   */\n      iszero\n        /* \"#utility.yul\":737:758   */\n      iszero\n        /* \"#utility.yul\":726:758   */\n      swap1\n      pop\n        /* \"#utility.yul\":674:764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":770:896   */\n    tag_23:\n        /* \"#utility.yul\":807:814   */\n      0x00\n        /* \"#utility.yul\":847:889   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":840:845   */\n      dup3\n        /* \"#utility.yul\":836:890   */\n      and\n        /* \"#utility.yul\":825:890   */\n      swap1\n      pop\n        /* \"#utility.yul\":770:896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220452150102c3907ba325ebdeb531def4f9615eea5377014c92617f1561a3b5c4b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ae806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301e7a2ce14610030575b600080fd5b61003861004f565b604051610046929190610111565b60405180910390f35b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158192509250509091565b6100fc8161013a565b82525050565b61010b8161014c565b82525050565b60006040820190506101266000830185610102565b61013360208301846100f3565b9392505050565b600061014582610158565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220452150102c3907ba325ebdeb531def4f9615eea5377014c92617f1561a3b5c4b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E7A2CE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46 SWAP3 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP2 SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0xFC DUP2 PUSH2 0x13A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0x14C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x126 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x102 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x21 POP LT 0x2C CODECOPY SMOD 0xBA ORIGIN 0x5E 0xBD 0xEB MSTORE8 SAR 0xEF 0x4F SWAP7 ISZERO 0xEE 0xA5 CALLDATACOPY PUSH17 0x14C92617F1561A3B5C4B64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "74:268:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getLastInvoker_29": {
									"entryPoint": 79,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:899:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "190:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "207:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "212:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "212:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "178:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "185:3:1",
														"type": ""
													}
												],
												"src": "131:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "366:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "376:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "388:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "399:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "376:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "474:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "459:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "412:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "412:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "555:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "540:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "487:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "487:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "330:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "342:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "350:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "361:4:1",
														"type": ""
													}
												],
												"src": "246:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "656:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "638:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "627:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "599:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "609:7:1",
														"type": ""
													}
												],
												"src": "572:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "726:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "751:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "744:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "744:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "726:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "698:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "708:7:1",
														"type": ""
													}
												],
												"src": "674:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "815:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "825:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "840:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "825:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "797:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "807:7:1",
														"type": ""
													}
												],
												"src": "770:126:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806301e7a2ce14610030575b600080fd5b61003861004f565b604051610046929190610111565b60405180910390f35b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158192509250509091565b6100fc8161013a565b82525050565b61010b8161014c565b82525050565b60006040820190506101266000830185610102565b61013360208301846100f3565b9392505050565b600061014582610158565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220452150102c3907ba325ebdeb531def4f9615eea5377014c92617f1561a3b5c4b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E7A2CE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46 SWAP3 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP2 SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0xFC DUP2 PUSH2 0x13A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0x14C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x126 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x102 JUMP JUMPDEST PUSH2 0x133 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145 DUP3 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x21 POP LT 0x2C CODECOPY SMOD 0xBA ORIGIN 0x5E 0xBD 0xEB MSTORE8 SAR 0xEF 0x4F SWAP7 ISZERO 0xEE 0xA5 CALLDATACOPY PUSH17 0x14C92617F1561A3B5C4B64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "74:268:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:209;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;171:4;177:7;195:19;217:11;;;;;;;;;;;195:33;;252:10;238:11;;:24;;;;;;;;;;;;;;;;;;313:3;290:27;;:11;:27;;;;319:11;282:49;;;;;130:209;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:109::-;212:21;227:5;212:21;:::i;:::-;207:3;200:34;131:109;;:::o;246:320::-;361:4;399:2;388:9;384:18;376:26;;412:65;474:1;463:9;459:17;450:6;412:65;:::i;:::-;487:72;555:2;544:9;540:18;531:6;487:72;:::i;:::-;246:320;;;;;:::o;572:96::-;609:7;638:24;656:5;638:24;:::i;:::-;627:35;;572:96;;;:::o;674:90::-;708:7;751:5;744:13;737:21;726:32;;674:90;;;:::o;770:126::-;807:7;847:42;840:5;836:54;825:65;;770:126;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86000",
								"executionCost": "135",
								"totalCost": "86135"
							},
							"external": {
								"getLastInvoker()": "26920"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220452150102c3907ba325ebdeb531def4f9615eea5377014c92617f1561a3b5c4b64736f6c63430008070033",
									".code": [
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "1E7A2CE"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 195,
											"end": 228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 262,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 238,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 238,
											"end": 262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 238,
											"end": 262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 290,
											"end": 301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 290,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 290,
											"end": 317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 290,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 319,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 282,
											"end": 331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 282,
											"end": 331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 130,
											"end": 339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 131,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 212,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 207,
											"end": 210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 200,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 376,
											"end": 402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 376,
											"end": 402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 459,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 412,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 412,
											"end": 477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 477,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 412,
											"end": 477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 540,
											"end": 558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 487,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 559,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 572,
											"end": 668,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 572,
											"end": 668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 638,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 638,
											"end": 662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 638,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 627,
											"end": 662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 627,
											"end": 662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 668,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 674,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 737,
											"end": 758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 726,
											"end": 758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 674,
											"end": 764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 674,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 674,
											"end": 764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 770,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 825,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 770,
											"end": 896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 770,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 770,
											"end": 896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getLastInvoker()": "01e7a2ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLastInvoker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PrevInvoker.sol\":\"LastInvoker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PrevInvoker.sol\":{\"keccak256\":\"0xcdff23c6f1bdd246632c538917ce6c5b5b8c0a7d391fcf74759c5a7cc80a6b07\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://76fefeadea912eaeda567a8b8424d1f1b503a1f638bf649ddd4daf7d2402bb03\",\"dweb:/ipfs/QmSLU3jn5DmvDM3KhUf36y1yDaMSATUwBHQot1i3bYir3k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/PrevInvoker.sol:LastInvoker",
								"label": "lastInvoker",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/PrevInvoker.sol": {
				"ast": {
					"absolutePath": "contracts/PrevInvoker.sol",
					"exportedSymbols": {
						"LastInvoker": [
							30
						]
					},
					"id": 31,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "LastInvoker",
							"nameLocation": "83:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "lastInvoker",
									"nameLocation": "110:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 30,
									"src": "102:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "102:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "185:154:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "prevInvoker",
														"nameLocation": "203:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "195:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "195:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"initialValue": {
													"id": 12,
													"name": "lastInvoker",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "217:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "195:33:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "lastInvoker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "238:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "252:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "252:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "238:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "238:24:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "prevInvoker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "290:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 22,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "313:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "305:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 20,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "305:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "305:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "290:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 25,
															"name": "prevInvoker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "319:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 26,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "289:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 9,
												"id": 27,
												"nodeType": "Return",
												"src": "282:49:0"
											}
										]
									},
									"functionSelector": "01e7a2ce",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLastInvoker",
									"nameLocation": "139:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "153:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "171:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "171:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "177:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:15:0"
									},
									"scope": 30,
									"src": "130:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "74:268:0",
							"usedErrors": []
						}
					],
					"src": "39:303:0"
				},
				"id": 0
			}
		}
	}
}